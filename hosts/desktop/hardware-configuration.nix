# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "xhci_pci" "ahci" "nvme" "usbhid" "usb_storage" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/aac1a316-500f-491c-a36f-4e793c3f73d0";
      fsType = "ext4";
    };

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/9112-D174";
      fsType = "vfat";
    };
  
  fileSystems."/home/jdeboer/ssd" =
    { device = "/dev/disk/by-uuid/3c56692f-f48b-4d03-a705-f53586019ead";
      fsType = "ext4";
    };
  fileSystems."/home/jdeboer/media" =
    { device = "10.0.0.10:/mnt/Storinator/media";
      fsType = "nfs";
      options = [ "x-systemd.automount" "noauto" ];
    };
    
  swapDevices =
    [ { device = "/dev/disk/by-uuid/6faff52e-385e-4635-a042-fa64295748fe"; }
    ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp6s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
